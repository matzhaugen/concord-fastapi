apiVersion: v1
kind: Service
metadata:
  labels:
    app: concord
  name: concord
  namespace: concord
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector:
    app: concord
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: starlette-backend
  name: starlette-backend
  namespace: concord
spec:
  ports:
  - name: http
    port: 8000
    targetPort: 8000
  selector:
    app: starlette-backend
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: concord
  name: concord
  namespace: concord
spec:
  replicas: 1
  selector:
    matchLabels:
      app: concord
  template:
    metadata:
      labels:
        app: concord
    spec:
      containers:
      - env:
        - name: POSTGRES_HOST_AUTH_METHOD
          value: trust
        image: postgres:12
        name: db
        ports:
        - containerPort: 5432
          name: db-connection
          protocol: TCP
        volumeMounts:
        - mountPath: /flatData.csv
          name: local-repo
          readOnly: true
          subPath: concord/src/flatData.csv
      - command:
        - /start-reload.sh
        env:
        - name: PORT
          value: "80"
        - name: MODULE_NAME
          value: src.main
        - name: BACKEND_URL
          value: http://localhost:81
        - name: STARLETTE_BACKEND_URL
          value: http://starlette-backend.concord:8000
        - name: OPENFAAS_URL
          value: http://gateway.openfaas:8080
        - name: SQL_ALCHEMY_DB_URI
          value: postgresql://postgres:postgrespassword@localhost:5432/postgres
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: PYTHONIOENCODING
          value: UTF-8
        image: localhost:5000/concord:latest
        name: concord
        ports:
        - containerPort: 80
          name: api
        volumeMounts:
        - mountPath: /app/src/
          name: local-repo
          readOnly: true
          subPath: concord/src/
      - name: backend
        volumeMounts:
        - mountPath: /app/
          name: local-repo
          readOnly: true
          subPath: starlette-backend/
      - command:
        - /start-reload.sh
        env:
        - name: PORT
          value: "81"
        - name: MODULE_NAME
          value: src.main
        image: localhost:5000/starlette-backend:latest
        name: starlette-backend
        ports:
        - containerPort: 8000
          name: api
      volumes:
      - hostPath:
          path: /concord-fastapi
        name: local-repo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: starlette-backend
  name: starlette-backend
  namespace: concord
spec:
  replicas: 5
  selector:
    matchLabels:
      app: starlette-backend
  template:
    metadata:
      labels:
        app: starlette-backend
    spec:
      containers:
      - command:
        - uvicorn
        - main:app
        - --host
        - 0.0.0.0
        - --workers
        - "4"
        image: matzhaugen/starlette-backend:latest
        name: starlette-backend
        ports:
        - containerPort: 8000
          name: api
        volumeMounts:
        - mountPath: /app/
          name: local-repo
          readOnly: true
          subPath: starlette-backend/
      volumes:
      - hostPath:
          path: /concord-fastapi
        name: local-repo
---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: concord-ingress
  namespace: concord
spec:
  prefix: /
  service: concord:80
  timeout_ms: 40000
